#!/bin/sh

function confirm {
	MSG=$1;
	while :
		do
			echo "${MSG} [Y/n]: "
			read ans
			case $ans in
				[yY]) return 0 ;;
				[nN]) return 1 ;;
			esac
		done
}

# Check project has node version config
if [ ! -e node_version_config ];
	then
	confirm 'Create version config ?';

	if [ $? -ne 0 ]
	then
		exit 1
	else
		echo 'Create Config';
		NODE_VERSION=`node -v | sed -e 's/v//p' -n`
		NPM_VERSION=`npm -v`
		echo '{\n\n\t"node": "'${NODE_VERSION}'",\n\t "npm": "'${NPM_VERSION}'"\n}' > node_version_config
		exit 1
	fi

else
	echo 'OK';
	NODE_VERSION=`sed -e 's/"node"//p' -n ./node_version_config | sed 's/.*"\(.*\)".*/\1/g'`
	NPM_VERSION=`sed -e 's/"npm"//p' -n ./node_version_config | sed 's/.*"\(.*\)".*/\1/g'`
fi


# Check use node version manager
if type nodebrew > /dev/null 2>&1;
then
	nodebrew --version | sed 1\!d;
	echo ${NPM_VERSION};

	nodebrew use ${NODE_VERSION}
	if [ $? -ne 0 ]
	then
		confirm 'Install node 'v${NODE_VERSION}
		if [ $? -ne 0 ]
		then
			echo 'Check yourself node version';
			exit 1
		else
			nodebrew install-binary v${NODE_VERSION} && nodebrew use ${NODE_VERSION};
			exit 1
		fi
	fi

elif type nvm > /dev/null 2>&1;
then
	nvm --version | sed 1\!d;
	echo ${NODE_VERSION};
	echo ${NPM_VERSION};
elif type nodeenv > /dev/null 2>&1;
then
	nodeenv --version | sed 1\!d;
	echo ${NODE_VERSION};
	echo ${NPM_VERSION};
else
	echo 'Prease install Node version manager!!!'
fi

